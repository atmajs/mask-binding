
UTest({
	'+if' () {
		
		var template = `
				div { 
					+if (foo == 1) > h1; 
					else (foo == 2) > h2; 
					else > h3;
				}
			`,
		
			model = {
				foo: 2
			},
			controller = {};
		
		$dom = $render(template, model, null, null, controller);
		
		eq_(model.__observers.foo.length, 1);
		
		
		$has('h1', false);
		$has('h2', true);
		$has('h3', false);
			
		model.foo = 1;
		$has('h1', true);
		$has('h2', true);
		$has('h3', false);
		$visible('h2', false);
		
		model.foo = 3;
		$has('h1', true);
		$has('h2', true);
		$has('h3', true);
		$visible('h1', false);
		$visible('h2', false);
		
		
		model.foo = 1;
		$visible('h1', true);
		$visible('h2', false);
		$visible('h3', false);
		
		Compo.dispose(controller);
		eq_(model.__observers.foo.length, 0);
	},
	
	'!+if single': function(){
		var template = `
			div >
				+if (message) {
					.baz > '~[bind:message]'
				}
			`,
			model = {message: false};
		
		var $dom = $render(template, model);
		eq_(model.__observers.message.length, 1);
		
		$dom.hasNot_('.baz');
		
		model.message = 'success';
		
		$dom
			.has_('.baz')
			.eq_('text', 'success')
			;
	},
	
	
	// BACKEND
	
	'$config': {
		'http.eval': function(done){
			include
				.instance()
				.js('/.import/mask.node.js::Mask')
				.done(function(resp){
					Object.extend(mask, resp.Mask.mask);
					done();
				})
		}
		
	},
	
	'+if server' (done) {
		
		UTest
			.server
			.render(`
				#foo {
					if (1) > '!'
					else > '?'
				}
			`, {}, function(error, document, window){
				
				
				$(document)
					.find('#foo')
					.eq_('length', 1)
					.eq_('text', '!')
					;
				done();
			});
		
	}
});