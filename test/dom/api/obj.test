UTest({
	'observers' : {
		'add + remove' () {
			var obj = {};
			var spy = sinon.spy();
			
			'> ADD'
			mask.obj.addObserver(obj, 'foo', spy);
			
			is_(obj.__observers, 'Object');
			is_(obj.__observers.foo, 'Array');
			is_(obj.__observers.foo[0], 'Function');
			obj.foo = 1;
			obj.foo = 2;
			
			eq_(spy.withArgs(1).calledOnce, true);
			eq_(spy.withArgs(2).calledOnce, true);
			
			'> REMOVE'
			mask.obj.removeObserver(obj, 'foo', spy);
			is_(obj.__observers, 'Object');
			is_(obj.__observers.foo, 'Array');
			eq_(obj.__observers.foo.length, 0);
			
			obj.foo = 3
			eq_(spy.callCount, 2);
		},

		'add observers with different deepness' () {
			var foo = {
				bar: {
					qux: {
						color: 'red'
					}
				}
			};
			var _1Fn = sinon.spy();
			var _2Fn = sinon.spy();
			var _3Fn = sinon.spy();

			mask.obj.addObserver(foo, 'bar.qux.color', _1Fn);
			mask.obj.addObserver(foo.bar, 'qux.color', _2Fn);
			mask.obj.addObserver(foo.bar.qux, 'color', _3Fn);

			foo.bar.qux.color = 'green';
			
			eq_(_1Fn.callCount, 1);
			eq_(_2Fn.callCount, 1);
			eq_(_3Fn.callCount, 1);
		}
		
	}
})