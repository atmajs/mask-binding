var TestData = {
	simple: {
		template: `
			#container { 
				+for ((key, val) in letters) > 
					span > '~[: key + val]'
			}
		`,
	
		model: () => ({
			letters: {
				a: 'A',
				b: 'B'
			}
		}),
		
		check ($container, model, ctr) {
			$container.eq_('text', 'aAbB');
			
			eq_(model.__observers.letters.length, 1);
			
			model.letters = { c: 'C' };
			$container.eq_('text', 'cC');
			
			ctr.remove();
			eq_(model.__observers.letters.length, 0);
		}
	},
	nested: {
		template: `
			#container {
				+for ((letter, value) in letters) > div {
					'|~[letter]~[value.name]'
					+for (num in value.numbers) > span > '~[num]'
				}
			}
		`,
		model: () => ({
			letters: {
				a: {
					name: 'A',
					numbers: {
						'1': '_1_',
						'2': '_2_',
					}
				},
				b: {
					name: 'B',
					numbers: {
						'3': '_3_',
						'4': '_4_',
					}
				},
			}
		}),
		check ($container, model, ctr) {
			$container.eq_('text', '|aA12|bB34');
			
			eq_(model.__observers.letters.length, 1);
			
			model.letters.a.numbers = { '3': '_3_' };
			$container.eq_('text', '|aA3|bB34');
			
			ctr.remove();
			eq_(model.__observers.letters.length, 0);
		}
	}
};

UTest({
	'(Browser) +for..in - simple' () {
		TestClient(TestData.simple);
	},
	'(Browser) +for..in - nested' () {
		TestClient(TestData.nested);
	},
	// Backend
	'$config': {
		'http.include': '/test/node.libraries.js'
	},
	
	'(Node) +for..in - simple' (done) {
		TestServer(TestData.simple, done);
	},
	
	'(Node) +for..in - nested' (done) {
		TestServer(TestData.nested, done);
	}
});

function TestClient (TestData) {
	var model = TestData.model();
	var owner = new (Compo());
	var $container = $(mask.render(TestData.template, model, null, null, owner));
	TestData.check($container, model, owner);
}
function TestServer (TestData, done) {
	UTest
		.server
		.render(TestData.template, {
			model: TestData.model(),
			scripts: [ '/.import/mask.bootstrap.js' ]
		})
		.done(function(doc, win){
			
			TestData.check(
				$(doc).find('#container'),
				win.app.model,
				win.app
			);
			done();
		});
}